AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  project_flask

  SAM Template for cognito

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Parameters:
  EXEXENV:
    Type: String
    Default: prod
  AWSDYNAMODBTABLENAME:
    Type: String
    Default: photos-table
  AWSS3BUCKET:
    Type: String
    Default: "photos-table"
  AWSREGION:
    Type: String
    Default: eu-central-1
  AWSCOGNITOPNAME:
    Type: String
    Default: "UserPoolFlaskDev"
  AWSCOGNITOCNAME:
    Type: String
    Default: "UserPoolClientPhotoAppDev"
  AWSCOGNITOPOOLID:
    Type: String
    Default: "AWSCOGNITOPOOLID"
  AWSCOGNITOCLIENTID:
    Type: String
    Default: "AWSCOGNITOCLIENTID"
  AWSCOGNITOCLIENTSECRET:
    Type: String
    Default: "AWSCOGNITOCLIENTSECRET"
  AWSCOGNITODOMAIN:
    Type: String
    Default: "AWSCOGNITODOMAIN"
    
  FLASKCONFIG:
    Type: String
    Default: "light"
  BASEURL:
    Type: String
    Default: "https://1saan8kf9j.execute-api.eu-central-1.amazonaws.com/prod"

Resources:
  DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: !Ref AWSDYNAMODBTABLENAME
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: title
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
  
  UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
          AdminCreateUserConfig:
           AllowAdminCreateUserOnly: false
          UserPoolName: !Ref AWSCOGNITOPNAME
          UsernameAttributes:
          - email
          AutoVerifiedAttributes:
          - email
          Policies:
            PasswordPolicy:
                MinimumLength: 6
                RequireLowercase: true
                RequireNumbers: false
                RequireSymbols: false
                RequireUppercase: true
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: true
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH
      AllowedOAuthFlows:
        - code
      CallbackURLs: 
        - !Sub "https://${ServiceApi}.execute-api.${AWSREGION}.amazonaws.com/${EXEXENV}/callback"
      LogoutURLs: 
        - !Sub "https://${ServiceApi}.execute-api.${AWSREGION}.amazonaws.com/${EXEXENV}"
      AllowedOAuthScopes:
        - openid
        - email
        - profile